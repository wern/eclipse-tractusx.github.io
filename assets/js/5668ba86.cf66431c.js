"use strict";(self.webpackChunkeclipse_tractusx_github_io=self.webpackChunkeclipse_tractusx_github_io||[]).push([[96731],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>f});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=o.createContext({}),l=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},m=function(e){var t=l(e.components);return o.createElement(c.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),u=l(n),d=r,f=u["".concat(c,".").concat(d)]||u[d]||p[d]||i;return n?o.createElement(f,a(a({ref:t},m),{},{components:n})):o.createElement(f,a({ref:t},m))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[u]="string"==typeof e?e:r,a[1]=s;for(var l=2;l<i;l++)a[l]=n[l];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9710:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var o=n(87462),r=(n(67294),n(3905));const i={},a="Using Conventional Commit messages",s={unversionedId:"kits/tractusx-edc/docs/development/decision-records/2023-04-20_conventional_commits/README",id:"version-3.1.0/kits/tractusx-edc/docs/development/decision-records/2023-04-20_conventional_commits/README",title:"Using Conventional Commit messages",description:"Decision",source:"@site/docs-kits_versioned_docs/version-3.1.0/kits/tractusx-edc/docs/development/decision-records/2023-04-20_conventional_commits/README.md",sourceDirName:"kits/tractusx-edc/docs/development/decision-records/2023-04-20_conventional_commits",slug:"/kits/tractusx-edc/docs/development/decision-records/2023-04-20_conventional_commits/",permalink:"/docs-kits/3.1.0/kits/tractusx-edc/docs/development/decision-records/2023-04-20_conventional_commits/",draft:!1,tags:[],version:"3.1.0",frontMatter:{}},c={},l=[{value:"Decision",id:"decision",level:2},{value:"Rationale",id:"rationale",level:2},{value:"Approach",id:"approach",level:2},{value:"Future outlook",id:"future-outlook",level:2}],m={toc:l};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"using-conventional-commit-messages"},"Using Conventional Commit messages"),(0,r.kt)("h2",{id:"decision"},"Decision"),(0,r.kt)("p",null,"From now on, TractusX-EDC will use only conventional commit messages. The specification can be\nfound ",(0,r.kt)("a",{parentName:"p",href:"https://www.conventionalcommits.org/en/v1.0.0/#summary"},"here")),(0,r.kt)("h2",{id:"rationale"},"Rationale"),(0,r.kt)("p",null,"Conventional commits create a structured, explicit and unambiguous commit history, that is easy to read and to\ninterpret. Conventional commits are widely used in the world of open source development.\nOn top of that, there\nis ",(0,r.kt)("a",{parentName:"p",href:"https://www.conventionalcommits.org/en/about/#tooling-for-conventional-commits"},"extensive tooling")," to support the\ncreation, interpretation and enforcement of conventional commits."),(0,r.kt)("h2",{id:"approach"},"Approach"),(0,r.kt)("p",null,"As a first step, we enforce conventional commits as part of our CI pipeline. TractusX-EDC is using\nSquash-Rebase-merging, and the PR title is used as commit message. We will not dictate how people structure their\ncommits during the ",(0,r.kt)("em",{parentName:"p"},"development")," phase of their PR, but we ",(0,r.kt)("em",{parentName:"p"},"will")," enforce, that PR titles (and thus: merge commit\nmessages) are in the conventional commit format."),(0,r.kt)("p",null,"To do that, we can use a very simple regex check on the PR title:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"- uses: deepakputhraya/action-pr-title@master\n  with:\n    regex: '^(build|chore|ci|docs|feat|fix|perf|refactor|revert|style|test)(\\(\\w+((,|\\/|\\\\)?\\s?\\w+)+\\))?!?: [\\S ]{1,80}[^\\.]$'\n    allowed_prefixes: 'build,chore,ci,docs,feat,fix,perf,refactor,revert,style,test'\n    prefix_case_sensitive: true\n")),(0,r.kt)("p",null,"That way, we can catch malformed PR titles early, which would result in malformed ",(0,r.kt)("em",{parentName:"p"},"merge commit messages"),". In addition,\nwe can\nuse any of the tools linked above to ensure commit messages, e.g. when merge commits are altered manually, etc."),(0,r.kt)("h2",{id:"future-outlook"},"Future outlook"),(0,r.kt)("p",null,"Once we have a structured commit history done in the conventional commit format, we can auto-generate changelogs, link\nto (auto-generated) documentation, render visually appealing version information, etc. Essentially, we can use any\nnumber of tooling on top of cc's.\nOne key aspect would be to get rid of the manual changelog,\nsee ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/eclipse-tractusx/tractusx-edc/discussions/253"},"this discussion"),"."))}u.isMDXComponent=!0}}]);