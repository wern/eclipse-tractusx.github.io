"use strict";(self.webpackChunkeclipse_tractusx_github_io=self.webpackChunkeclipse_tractusx_github_io||[]).push([[59577],{40813:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>g,contentTitle:()=>h,default:()=>v,frontMatter:()=>m,metadata:()=>u,toc:()=>y});var a=i(87462),s=(i(67294),i(3905)),r=i(26389),n=i(94891),o=i(75190),d=i(47507),l=i(24310),c=i(63303),p=(i(75035),i(85162));const m={id:"get-addresses-1",title:"Get page of addresses matching the search criteria",description:"This endpoint tries to find matches among all existing business partners of type address, filtering out partners which entirely do not match and ranking the remaining partners according to the accuracy of the match. The match of a partner is better the higher its relevancy score. Note that when using search parameters the max page is 20.",sidebar_label:"Get page of addresses matching the search criteria",hide_title:!0,hide_table_of_contents:!0,api:{tags:["address-controller"],description:"This endpoint tries to find matches among all existing business partners of type address, filtering out partners which entirely do not match and ranking the remaining partners according to the accuracy of the match. The match of a partner is better the higher its relevancy score. Note that when using search parameters the max page is 20.",operationId:"getAddresses_1",parameters:[{name:"name",in:"query",description:"Filter business partners by name",required:!1,schema:{type:"string"}},{name:"page",in:"query",description:"Number of page to get results from",required:!1,schema:{minimum:0,type:"string",default:"0"}},{name:"size",in:"query",description:"Size of each page",required:!1,schema:{maximum:100,minimum:0,type:"string",default:"10"}}],responses:{200:{description:"Page of addresses matching the search criteria, may be empty",content:{"application/json":{schema:{type:"object",properties:{totalElements:{type:"integer",description:"Total number of all results in all pages",format:"int64"},totalPages:{type:"integer",description:"Total number pages",format:"int32"},page:{type:"integer",description:"Current page number",format:"int32"},contentSize:{type:"integer",description:"Number of results in the page",format:"int32"},content:{type:"array",description:"Collection of results in the page",items:{type:"object",properties:{score:{type:"number",format:"float"},address:{type:"object",properties:{bpna:{type:"string",description:"Business Partner Number of this address"},name:{type:"string",description:"Name of the logistic address of the business partner. This is not according to official\nregisters but according to the name the uploading sharing member chooses."},states:{type:"array",items:{type:"object",properties:{description:{type:"string",description:"Exact, official denotation of the status"},validFrom:{type:"string",description:"Since when the status is/was valid",format:"date-time"},validTo:{type:"string",description:"Until the status was valid, if applicable",format:"date-time"},type:{type:"object",properties:{technicalKey:{type:"string",enum:["ACTIVE","INACTIVE"]},name:{type:"string"}},description:"Named type uniquely identified by its technical key"}},description:"Status record of a legal entity"}},identifiers:{type:"array",items:{type:"object",properties:{value:{type:"string",description:"Value of the identifier"},type:{type:"object",properties:{technicalKey:{type:"string"},name:{type:"string"}},description:"Named type uniquely identified by its technical key"}},description:"Identifier record of a logistic address"}},physicalPostalAddress:{type:"object",properties:{geographicCoordinates:{type:"object",properties:{longitude:{type:"number",description:"Longitude coordinate",format:"float"},latitude:{type:"number",description:"Latitude coordinate",format:"float"},altitude:{type:"number",description:"Altitude, if applicable",format:"float"}},description:"Geo coordinates record for an address"},country:{type:"string",description:"Describes the country",enum:["UNDEFINED","AC","AD","AE","AF","AG","AI","AL","AM","AN","AO","AQ","AR","AS","AT","AU","AW","AX","AZ","BA","BB","BD","BE","BF","BG","BH","BI","BJ","BL","BM","BN","BO","BQ","BR","BS","BT","BU","BV","BW","BY","BZ","CA","CC","CD","CF","CG","CH","CI","CK","CL","CM","CN","CO","CP","CR","CS","CU","CV","CW","CX","CY","CZ","DE","DG","DJ","DK","DM","DO","DZ","EA","EC","EE","EG","EH","ER","ES","ET","EU","EZ","FI","FJ","FK","FM","FO","FR","FX","GA","GB","GD","GE","GF","GG","GH","GI","GL","GM","GN","GP","GQ","GR","GS","GT","GU","GW","GY","HK","HM","HN","HR","HT","HU","IC","ID","IE","IL","IM","IN","IO","IQ","IR","IS","IT","JE","JM","JO","JP","KE","KG","KH","KI","KM","KN","KP","KR","KW","KY","KZ","LA","LB","LC","LI","LK","LR","LS","LT","LU","LV","LY","MA","MC","MD","ME","MF","MG","MH","MK","ML","MM","MN","MO","MP","MQ","MR","MS","MT","MU","MV","MW","MX","MY","MZ","NA","NC","NE","NF","NG","NI","NL","NO","NP","NR","NT","NU","NZ","OM","PA","PE","PF","PG","PH","PK","PL","PM","PN","PR","PS","PT","PW","PY","QA","RE","RO","RS","RU","RW","SA","SB","SC","SD","SE","SF","SG","SH","SI","SJ","SK","SL","SM","SN","SO","SR","SS","ST","SU","SV","SX","SY","SZ","TA","TC","TD","TF","TG","TH","TJ","TK","TL","TM","TN","TO","TP","TR","TT","TV","TW","TZ","UA","UG","UK","UM","US","UY","UZ","VA","VC","VE","VG","VI","VN","VU","WF","WS","XI","XU","XK","YE","YT","YU","ZA","ZM","ZR","ZW"]},postalCode:{type:"string",description:"A postal code, also known as postcode, PIN or ZIP Code"},city:{type:"string",description:"The city of the address (Synonym: Town, village, municipality)"},street:{type:"object",properties:{name:{type:"string",description:"Describes the official Name of the Street."},houseNumber:{type:"string",description:"Describes the House Number"},milestone:{type:"string",description:"The Milestone is relevant for long roads without specific house numbers."},direction:{type:"string",description:"Describes the direction"}},description:"A public road in a city, town, or village, typically with houses and buildings on one or both sides."},administrativeAreaLevel1:{type:"string",description:"Identifying code of the Region within the country (e.g. Bayern)"},administrativeAreaLevel2:{type:"string",description:"Further possibility to describe the region/address(e.g. County/Landkreis)"},administrativeAreaLevel3:{type:"string",description:"Further possibility to describe the region/address(e.g. Township/Gemeinde)"},district:{type:"string",description:"Divides the city in several smaller areas"},companyPostalCode:{type:"string",description:"A separate postal code for a company, also known as postcode, PIN or ZIP Code"},industrialZone:{type:"string",description:"The practice of designating an area for industrial development"},building:{type:"string",description:"Describes a specific building within the address"},floor:{type:"string",description:"Describes the floor/level the delivery shall take place"},door:{type:"string",description:"Describes the  door/room/suite on the respective floor the delivery shall take place"}},description:"Physical Postal Address Part"},alternativePostalAddress:{type:"object",properties:{geographicCoordinates:{type:"object",properties:{longitude:{type:"number",description:"Longitude coordinate",format:"float"},latitude:{type:"number",description:"Latitude coordinate",format:"float"},altitude:{type:"number",description:"Altitude, if applicable",format:"float"}},description:"Geo coordinates record for an address"},country:{type:"string",description:"Describes the country",enum:["UNDEFINED","AC","AD","AE","AF","AG","AI","AL","AM","AN","AO","AQ","AR","AS","AT","AU","AW","AX","AZ","BA","BB","BD","BE","BF","BG","BH","BI","BJ","BL","BM","BN","BO","BQ","BR","BS","BT","BU","BV","BW","BY","BZ","CA","CC","CD","CF","CG","CH","CI","CK","CL","CM","CN","CO","CP","CR","CS","CU","CV","CW","CX","CY","CZ","DE","DG","DJ","DK","DM","DO","DZ","EA","EC","EE","EG","EH","ER","ES","ET","EU","EZ","FI","FJ","FK","FM","FO","FR","FX","GA","GB","GD","GE","GF","GG","GH","GI","GL","GM","GN","GP","GQ","GR","GS","GT","GU","GW","GY","HK","HM","HN","HR","HT","HU","IC","ID","IE","IL","IM","IN","IO","IQ","IR","IS","IT","JE","JM","JO","JP","KE","KG","KH","KI","KM","KN","KP","KR","KW","KY","KZ","LA","LB","LC","LI","LK","LR","LS","LT","LU","LV","LY","MA","MC","MD","ME","MF","MG","MH","MK","ML","MM","MN","MO","MP","MQ","MR","MS","MT","MU","MV","MW","MX","MY","MZ","NA","NC","NE","NF","NG","NI","NL","NO","NP","NR","NT","NU","NZ","OM","PA","PE","PF","PG","PH","PK","PL","PM","PN","PR","PS","PT","PW","PY","QA","RE","RO","RS","RU","RW","SA","SB","SC","SD","SE","SF","SG","SH","SI","SJ","SK","SL","SM","SN","SO","SR","SS","ST","SU","SV","SX","SY","SZ","TA","TC","TD","TF","TG","TH","TJ","TK","TL","TM","TN","TO","TP","TR","TT","TV","TW","TZ","UA","UG","UK","UM","US","UY","UZ","VA","VC","VE","VG","VI","VN","VU","WF","WS","XI","XU","XK","YE","YT","YU","ZA","ZM","ZR","ZW"]},postalCode:{type:"string",description:"A postal code, also known as postcode, PIN or ZIP Code"},city:{type:"string",description:"The city of the address (Synonym: Town, village, municipality)"},administrativeAreaLevel1:{type:"string",description:"Identifying code of the Region within the country (e.g. Bayern)"},deliveryServiceNumber:{type:"string",description:"Describes the PO Box or private Bag number the delivery should be placed at."},deliveryServiceType:{type:"string",description:"The type of this specified delivery",enum:["PO_BOX","PRIVATE_BAG","BOITE_POSTALE"]},deliveryServiceQualifier:{type:"string",description:"Delivery Service Qualifier"}},description:"Alternative Postal Address Part"},bpnLegalEntity:{type:"string",description:"BPN of the related legal entity, if available"},bpnSite:{type:"string",description:"BPN of the related site, if available"},createdAt:{type:"string",description:"The timestamp the business partner data was created",format:"date-time"},updatedAt:{type:"string",description:"The timestamp the business partner data was last updated",format:"date-time"},isLegalAddress:{type:"boolean",description:"Flag if this is the legal address of its related legal entity"},isMainAddress:{type:"boolean",description:"Flag if this is the main address of its related site"}},description:"Logistic address "}},description:"Match with score for a business partner record of type address"}}},description:"Paginated collection of results"}}}},400:{description:"On malformed search or pagination request"}},method:"get",path:"/api/catena/addresses",servers:[{url:"http://localhost:8080",description:"Generated server url"}],info:{title:"Business Partner Data Management Pool",description:"Service that manages and shares business partner data with other CatenaX services",version:"4.0.0-SNAPSHOT"},postman:{name:"Get page of addresses matching the search criteria",description:{content:"This endpoint tries to find matches among all existing business partners of type address, filtering out partners which entirely do not match and ranking the remaining partners according to the accuracy of the match. The match of a partner is better the higher its relevancy score. Note that when using search parameters the max page is 20.",type:"text/plain"},url:{path:["api","catena","addresses"],host:["{{baseUrl}}"],query:[{disabled:!1,description:{content:"Filter business partners by name",type:"text/plain"},key:"name",value:""},{disabled:!1,description:{content:"Number of page to get results from",type:"text/plain"},key:"page",value:""},{disabled:!1,description:{content:"Size of each page",type:"text/plain"},key:"size",value:""}],variable:[]},header:[{key:"Accept",value:"application/json"}],method:"GET"}},sidebar_class_name:"get api-method",info_path:"docs-kits/kits/Business Partner Kit/Software Development View/Pool Api/business-partner-data-management-pool",custom_edit_url:null},h=void 0,u={unversionedId:"kits/Business Partner Kit/Software Development View/Pool Api/get-addresses-1",id:"version-23.09/kits/Business Partner Kit/Software Development View/Pool Api/get-addresses-1",title:"Get page of addresses matching the search criteria",description:"This endpoint tries to find matches among all existing business partners of type address, filtering out partners which entirely do not match and ranking the remaining partners according to the accuracy of the match. The match of a partner is better the higher its relevancy score. Note that when using search parameters the max page is 20.",source:"@site/docs-kits_versioned_docs/version-23.09/kits/Business Partner Kit/Software Development View/Pool Api/get-addresses-1.api.mdx",sourceDirName:"kits/Business Partner Kit/Software Development View/Pool Api",slug:"/kits/Business Partner Kit/Software Development View/Pool Api/get-addresses-1",permalink:"/docs-kits/23.09/kits/Business Partner Kit/Software Development View/Pool Api/get-addresses-1",draft:!1,editUrl:null,tags:[],version:"23.09",frontMatter:{id:"get-addresses-1",title:"Get page of addresses matching the search criteria",description:"This endpoint tries to find matches among all existing business partners of type address, filtering out partners which entirely do not match and ranking the remaining partners according to the accuracy of the match. The match of a partner is better the higher its relevancy score. Note that when using search parameters the max page is 20.",sidebar_label:"Get page of addresses matching the search criteria",hide_title:!0,hide_table_of_contents:!0,api:{tags:["address-controller"],description:"This endpoint tries to find matches among all existing business partners of type address, filtering out partners which entirely do not match and ranking the remaining partners according to the accuracy of the match. The match of a partner is better the higher its relevancy score. Note that when using search parameters the max page is 20.",operationId:"getAddresses_1",parameters:[{name:"name",in:"query",description:"Filter business partners by name",required:!1,schema:{type:"string"}},{name:"page",in:"query",description:"Number of page to get results from",required:!1,schema:{minimum:0,type:"string",default:"0"}},{name:"size",in:"query",description:"Size of each page",required:!1,schema:{maximum:100,minimum:0,type:"string",default:"10"}}],responses:{200:{description:"Page of addresses matching the search criteria, may be empty",content:{"application/json":{schema:{type:"object",properties:{totalElements:{type:"integer",description:"Total number of all results in all pages",format:"int64"},totalPages:{type:"integer",description:"Total number pages",format:"int32"},page:{type:"integer",description:"Current page number",format:"int32"},contentSize:{type:"integer",description:"Number of results in the page",format:"int32"},content:{type:"array",description:"Collection of results in the page",items:{type:"object",properties:{score:{type:"number",format:"float"},address:{type:"object",properties:{bpna:{type:"string",description:"Business Partner Number of this address"},name:{type:"string",description:"Name of the logistic address of the business partner. This is not according to official\nregisters but according to the name the uploading sharing member chooses."},states:{type:"array",items:{type:"object",properties:{description:{type:"string",description:"Exact, official denotation of the status"},validFrom:{type:"string",description:"Since when the status is/was valid",format:"date-time"},validTo:{type:"string",description:"Until the status was valid, if applicable",format:"date-time"},type:{type:"object",properties:{technicalKey:{type:"string",enum:["ACTIVE","INACTIVE"]},name:{type:"string"}},description:"Named type uniquely identified by its technical key"}},description:"Status record of a legal entity"}},identifiers:{type:"array",items:{type:"object",properties:{value:{type:"string",description:"Value of the identifier"},type:{type:"object",properties:{technicalKey:{type:"string"},name:{type:"string"}},description:"Named type uniquely identified by its technical key"}},description:"Identifier record of a logistic address"}},physicalPostalAddress:{type:"object",properties:{geographicCoordinates:{type:"object",properties:{longitude:{type:"number",description:"Longitude coordinate",format:"float"},latitude:{type:"number",description:"Latitude coordinate",format:"float"},altitude:{type:"number",description:"Altitude, if applicable",format:"float"}},description:"Geo coordinates record for an address"},country:{type:"string",description:"Describes the country",enum:["UNDEFINED","AC","AD","AE","AF","AG","AI","AL","AM","AN","AO","AQ","AR","AS","AT","AU","AW","AX","AZ","BA","BB","BD","BE","BF","BG","BH","BI","BJ","BL","BM","BN","BO","BQ","BR","BS","BT","BU","BV","BW","BY","BZ","CA","CC","CD","CF","CG","CH","CI","CK","CL","CM","CN","CO","CP","CR","CS","CU","CV","CW","CX","CY","CZ","DE","DG","DJ","DK","DM","DO","DZ","EA","EC","EE","EG","EH","ER","ES","ET","EU","EZ","FI","FJ","FK","FM","FO","FR","FX","GA","GB","GD","GE","GF","GG","GH","GI","GL","GM","GN","GP","GQ","GR","GS","GT","GU","GW","GY","HK","HM","HN","HR","HT","HU","IC","ID","IE","IL","IM","IN","IO","IQ","IR","IS","IT","JE","JM","JO","JP","KE","KG","KH","KI","KM","KN","KP","KR","KW","KY","KZ","LA","LB","LC","LI","LK","LR","LS","LT","LU","LV","LY","MA","MC","MD","ME","MF","MG","MH","MK","ML","MM","MN","MO","MP","MQ","MR","MS","MT","MU","MV","MW","MX","MY","MZ","NA","NC","NE","NF","NG","NI","NL","NO","NP","NR","NT","NU","NZ","OM","PA","PE","PF","PG","PH","PK","PL","PM","PN","PR","PS","PT","PW","PY","QA","RE","RO","RS","RU","RW","SA","SB","SC","SD","SE","SF","SG","SH","SI","SJ","SK","SL","SM","SN","SO","SR","SS","ST","SU","SV","SX","SY","SZ","TA","TC","TD","TF","TG","TH","TJ","TK","TL","TM","TN","TO","TP","TR","TT","TV","TW","TZ","UA","UG","UK","UM","US","UY","UZ","VA","VC","VE","VG","VI","VN","VU","WF","WS","XI","XU","XK","YE","YT","YU","ZA","ZM","ZR","ZW"]},postalCode:{type:"string",description:"A postal code, also known as postcode, PIN or ZIP Code"},city:{type:"string",description:"The city of the address (Synonym: Town, village, municipality)"},street:{type:"object",properties:{name:{type:"string",description:"Describes the official Name of the Street."},houseNumber:{type:"string",description:"Describes the House Number"},milestone:{type:"string",description:"The Milestone is relevant for long roads without specific house numbers."},direction:{type:"string",description:"Describes the direction"}},description:"A public road in a city, town, or village, typically with houses and buildings on one or both sides."},administrativeAreaLevel1:{type:"string",description:"Identifying code of the Region within the country (e.g. Bayern)"},administrativeAreaLevel2:{type:"string",description:"Further possibility to describe the region/address(e.g. County/Landkreis)"},administrativeAreaLevel3:{type:"string",description:"Further possibility to describe the region/address(e.g. Township/Gemeinde)"},district:{type:"string",description:"Divides the city in several smaller areas"},companyPostalCode:{type:"string",description:"A separate postal code for a company, also known as postcode, PIN or ZIP Code"},industrialZone:{type:"string",description:"The practice of designating an area for industrial development"},building:{type:"string",description:"Describes a specific building within the address"},floor:{type:"string",description:"Describes the floor/level the delivery shall take place"},door:{type:"string",description:"Describes the  door/room/suite on the respective floor the delivery shall take place"}},description:"Physical Postal Address Part"},alternativePostalAddress:{type:"object",properties:{geographicCoordinates:{type:"object",properties:{longitude:{type:"number",description:"Longitude coordinate",format:"float"},latitude:{type:"number",description:"Latitude coordinate",format:"float"},altitude:{type:"number",description:"Altitude, if applicable",format:"float"}},description:"Geo coordinates record for an address"},country:{type:"string",description:"Describes the country",enum:["UNDEFINED","AC","AD","AE","AF","AG","AI","AL","AM","AN","AO","AQ","AR","AS","AT","AU","AW","AX","AZ","BA","BB","BD","BE","BF","BG","BH","BI","BJ","BL","BM","BN","BO","BQ","BR","BS","BT","BU","BV","BW","BY","BZ","CA","CC","CD","CF","CG","CH","CI","CK","CL","CM","CN","CO","CP","CR","CS","CU","CV","CW","CX","CY","CZ","DE","DG","DJ","DK","DM","DO","DZ","EA","EC","EE","EG","EH","ER","ES","ET","EU","EZ","FI","FJ","FK","FM","FO","FR","FX","GA","GB","GD","GE","GF","GG","GH","GI","GL","GM","GN","GP","GQ","GR","GS","GT","GU","GW","GY","HK","HM","HN","HR","HT","HU","IC","ID","IE","IL","IM","IN","IO","IQ","IR","IS","IT","JE","JM","JO","JP","KE","KG","KH","KI","KM","KN","KP","KR","KW","KY","KZ","LA","LB","LC","LI","LK","LR","LS","LT","LU","LV","LY","MA","MC","MD","ME","MF","MG","MH","MK","ML","MM","MN","MO","MP","MQ","MR","MS","MT","MU","MV","MW","MX","MY","MZ","NA","NC","NE","NF","NG","NI","NL","NO","NP","NR","NT","NU","NZ","OM","PA","PE","PF","PG","PH","PK","PL","PM","PN","PR","PS","PT","PW","PY","QA","RE","RO","RS","RU","RW","SA","SB","SC","SD","SE","SF","SG","SH","SI","SJ","SK","SL","SM","SN","SO","SR","SS","ST","SU","SV","SX","SY","SZ","TA","TC","TD","TF","TG","TH","TJ","TK","TL","TM","TN","TO","TP","TR","TT","TV","TW","TZ","UA","UG","UK","UM","US","UY","UZ","VA","VC","VE","VG","VI","VN","VU","WF","WS","XI","XU","XK","YE","YT","YU","ZA","ZM","ZR","ZW"]},postalCode:{type:"string",description:"A postal code, also known as postcode, PIN or ZIP Code"},city:{type:"string",description:"The city of the address (Synonym: Town, village, municipality)"},administrativeAreaLevel1:{type:"string",description:"Identifying code of the Region within the country (e.g. Bayern)"},deliveryServiceNumber:{type:"string",description:"Describes the PO Box or private Bag number the delivery should be placed at."},deliveryServiceType:{type:"string",description:"The type of this specified delivery",enum:["PO_BOX","PRIVATE_BAG","BOITE_POSTALE"]},deliveryServiceQualifier:{type:"string",description:"Delivery Service Qualifier"}},description:"Alternative Postal Address Part"},bpnLegalEntity:{type:"string",description:"BPN of the related legal entity, if available"},bpnSite:{type:"string",description:"BPN of the related site, if available"},createdAt:{type:"string",description:"The timestamp the business partner data was created",format:"date-time"},updatedAt:{type:"string",description:"The timestamp the business partner data was last updated",format:"date-time"},isLegalAddress:{type:"boolean",description:"Flag if this is the legal address of its related legal entity"},isMainAddress:{type:"boolean",description:"Flag if this is the main address of its related site"}},description:"Logistic address "}},description:"Match with score for a business partner record of type address"}}},description:"Paginated collection of results"}}}},400:{description:"On malformed search or pagination request"}},method:"get",path:"/api/catena/addresses",servers:[{url:"http://localhost:8080",description:"Generated server url"}],info:{title:"Business Partner Data Management Pool",description:"Service that manages and shares business partner data with other CatenaX services",version:"4.0.0-SNAPSHOT"},postman:{name:"Get page of addresses matching the search criteria",description:{content:"This endpoint tries to find matches among all existing business partners of type address, filtering out partners which entirely do not match and ranking the remaining partners according to the accuracy of the match. The match of a partner is better the higher its relevancy score. Note that when using search parameters the max page is 20.",type:"text/plain"},url:{path:["api","catena","addresses"],host:["{{baseUrl}}"],query:[{disabled:!1,description:{content:"Filter business partners by name",type:"text/plain"},key:"name",value:""},{disabled:!1,description:{content:"Number of page to get results from",type:"text/plain"},key:"page",value:""},{disabled:!1,description:{content:"Size of each page",type:"text/plain"},key:"size",value:""}],variable:[]},header:[{key:"Accept",value:"application/json"}],method:"GET"}},sidebar_class_name:"get api-method",info_path:"docs-kits/kits/Business Partner Kit/Software Development View/Pool Api/business-partner-data-management-pool",custom_edit_url:null},sidebar:"kits",previous:{title:"address-controller",permalink:"/docs-kits/23.09/category/kits/Business Partner Kit/Software Development View/Pool Api/address-controller"},next:{title:"Update existing address business partners",permalink:"/docs-kits/23.09/kits/Business Partner Kit/Software Development View/Pool Api/update-addresses"}},g={},y=[{value:"Get page of addresses matching the search criteria",id:"get-page-of-addresses-matching-the-search-criteria",level:2}],f={toc:y};function v(e){let{components:t,...i}=e;return(0,s.kt)("wrapper",(0,a.Z)({},f,i,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"get-page-of-addresses-matching-the-search-criteria"},"Get page of addresses matching the search criteria"),(0,s.kt)("p",null,"This endpoint tries to find matches among all existing business partners of type address, filtering out partners which entirely do not match and ranking the remaining partners according to the accuracy of the match. The match of a partner is better the higher its relevancy score. Note that when using search parameters the max page is 20."),(0,s.kt)("details",{style:{marginBottom:"1rem"},"data-collapsed":!1,open:!0},(0,s.kt)("summary",{style:{}},(0,s.kt)("strong",null,"Query Parameters")),(0,s.kt)("div",null,(0,s.kt)("ul",null,(0,s.kt)(o.Z,{className:"paramsItem",param:{name:"name",in:"query",description:"Filter business partners by name",required:!1,schema:{type:"string"}},mdxType:"ParamsItem"}),(0,s.kt)(o.Z,{className:"paramsItem",param:{name:"page",in:"query",description:"Number of page to get results from",required:!1,schema:{minimum:0,type:"string",default:"0"}},mdxType:"ParamsItem"}),(0,s.kt)(o.Z,{className:"paramsItem",param:{name:"size",in:"query",description:"Size of each page",required:!1,schema:{maximum:100,minimum:0,type:"string",default:"10"}},mdxType:"ParamsItem"})))),(0,s.kt)("div",null,(0,s.kt)(r.Z,{mdxType:"ApiTabs"},(0,s.kt)(p.Z,{label:"200",value:"200",mdxType:"TabItem"},(0,s.kt)("div",null,(0,s.kt)("p",null,"Page of addresses matching the search criteria, may be empty")),(0,s.kt)("div",null,(0,s.kt)(n.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,s.kt)(p.Z,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,s.kt)(c.Z,{mdxType:"SchemaTabs"},(0,s.kt)(p.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,s.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,s.kt)("summary",{style:{textAlign:"left"}},(0,s.kt)("strong",null,"Schema")),(0,s.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,s.kt)("ul",{style:{marginLeft:"1rem"}},(0,s.kt)(l.Z,{collapsible:!1,name:"totalElements",required:!1,deprecated:void 0,schemaDescription:"Total number of all results in all pages",schemaName:"int64",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(l.Z,{collapsible:!1,name:"totalPages",required:!1,deprecated:void 0,schemaDescription:"Total number pages",schemaName:"int32",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(l.Z,{collapsible:!1,name:"page",required:!1,deprecated:void 0,schemaDescription:"Current page number",schemaName:"int32",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(l.Z,{collapsible:!1,name:"contentSize",required:!1,deprecated:void 0,schemaDescription:"Number of results in the page",schemaName:"int32",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(l.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,s.kt)("details",{style:{}},(0,s.kt)("summary",{style:{}},(0,s.kt)("strong",null,"content"),(0,s.kt)("span",{style:{opacity:"0.6"}}," object[]")),(0,s.kt)("div",{style:{marginLeft:"1rem"}},(0,s.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,s.kt)("p",null,"Collection of results in the page")),(0,s.kt)(l.Z,{collapsible:!1,name:"score",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"float",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(l.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,s.kt)("details",{style:{}},(0,s.kt)("summary",{style:{}},(0,s.kt)("strong",null,"address"),(0,s.kt)("span",{style:{opacity:"0.6"}}," object")),(0,s.kt)("div",{style:{marginLeft:"1rem"}},(0,s.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,s.kt)("p",null,"Logistic address ")),(0,s.kt)(l.Z,{collapsible:!1,name:"bpna",required:!1,deprecated:void 0,schemaDescription:"Business Partner Number of this address",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(l.Z,{collapsible:!1,name:"name",required:!1,deprecated:void 0,schemaDescription:"Name of the logistic address of the business partner. This is not according to official\nregisters but according to the name the uploading sharing member chooses.",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(l.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,s.kt)("details",{style:{}},(0,s.kt)("summary",{style:{}},(0,s.kt)("strong",null,"states"),(0,s.kt)("span",{style:{opacity:"0.6"}}," object[]")),(0,s.kt)("div",{style:{marginLeft:"1rem"}},(0,s.kt)(l.Z,{collapsible:!1,name:"description",required:!1,deprecated:void 0,schemaDescription:"Exact, official denotation of the status",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(l.Z,{collapsible:!1,name:"validFrom",required:!1,deprecated:void 0,schemaDescription:"Since when the status is/was valid",schemaName:"date-time",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(l.Z,{collapsible:!1,name:"validTo",required:!1,deprecated:void 0,schemaDescription:"Until the status was valid, if applicable",schemaName:"date-time",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(l.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,s.kt)("details",{style:{}},(0,s.kt)("summary",{style:{}},(0,s.kt)("strong",null,"type"),(0,s.kt)("span",{style:{opacity:"0.6"}}," object")),(0,s.kt)("div",{style:{marginLeft:"1rem"}},(0,s.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,s.kt)("p",null,"Named type uniquely identified by its technical key")),(0,s.kt)(l.Z,{collapsible:!1,name:"technicalKey",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"string",qualifierMessage:"**Possible values:** [`ACTIVE`, `INACTIVE`]",defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(l.Z,{collapsible:!1,name:"name",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}))))))),(0,s.kt)(l.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,s.kt)("details",{style:{}},(0,s.kt)("summary",{style:{}},(0,s.kt)("strong",null,"identifiers"),(0,s.kt)("span",{style:{opacity:"0.6"}}," object[]")),(0,s.kt)("div",{style:{marginLeft:"1rem"}},(0,s.kt)(l.Z,{collapsible:!1,name:"value",required:!1,deprecated:void 0,schemaDescription:"Value of the identifier",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(l.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,s.kt)("details",{style:{}},(0,s.kt)("summary",{style:{}},(0,s.kt)("strong",null,"type"),(0,s.kt)("span",{style:{opacity:"0.6"}}," object")),(0,s.kt)("div",{style:{marginLeft:"1rem"}},(0,s.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,s.kt)("p",null,"Named type uniquely identified by its technical key")),(0,s.kt)(l.Z,{collapsible:!1,name:"technicalKey",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(l.Z,{collapsible:!1,name:"name",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}))))))),(0,s.kt)(l.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,s.kt)("details",{style:{}},(0,s.kt)("summary",{style:{}},(0,s.kt)("strong",null,"physicalPostalAddress"),(0,s.kt)("span",{style:{opacity:"0.6"}}," object")),(0,s.kt)("div",{style:{marginLeft:"1rem"}},(0,s.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,s.kt)("p",null,"Physical Postal Address Part")),(0,s.kt)(l.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,s.kt)("details",{style:{}},(0,s.kt)("summary",{style:{}},(0,s.kt)("strong",null,"geographicCoordinates"),(0,s.kt)("span",{style:{opacity:"0.6"}}," object")),(0,s.kt)("div",{style:{marginLeft:"1rem"}},(0,s.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,s.kt)("p",null,"Geo coordinates record for an address")),(0,s.kt)(l.Z,{collapsible:!1,name:"longitude",required:!1,deprecated:void 0,schemaDescription:"Longitude coordinate",schemaName:"float",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(l.Z,{collapsible:!1,name:"latitude",required:!1,deprecated:void 0,schemaDescription:"Latitude coordinate",schemaName:"float",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(l.Z,{collapsible:!1,name:"altitude",required:!1,deprecated:void 0,schemaDescription:"Altitude, if applicable",schemaName:"float",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"})))),(0,s.kt)(l.Z,{collapsible:!1,name:"country",required:!1,deprecated:void 0,schemaDescription:"Describes the country",schemaName:"string",qualifierMessage:"**Possible values:** [`UNDEFINED`, `AC`, `AD`, `AE`, `AF`, `AG`, `AI`, `AL`, `AM`, `AN`, `AO`, `AQ`, `AR`, `AS`, `AT`, `AU`, `AW`, `AX`, `AZ`, `BA`, `BB`, `BD`, `BE`, `BF`, `BG`, `BH`, `BI`, `BJ`, `BL`, `BM`, `BN`, `BO`, `BQ`, `BR`, `BS`, `BT`, `BU`, `BV`, `BW`, `BY`, `BZ`, `CA`, `CC`, `CD`, `CF`, `CG`, `CH`, `CI`, `CK`, `CL`, `CM`, `CN`, `CO`, `CP`, `CR`, `CS`, `CU`, `CV`, `CW`, `CX`, `CY`, `CZ`, `DE`, `DG`, `DJ`, `DK`, `DM`, `DO`, `DZ`, `EA`, `EC`, `EE`, `EG`, `EH`, `ER`, `ES`, `ET`, `EU`, `EZ`, `FI`, `FJ`, `FK`, `FM`, `FO`, `FR`, `FX`, `GA`, `GB`, `GD`, `GE`, `GF`, `GG`, `GH`, `GI`, `GL`, `GM`, `GN`, `GP`, `GQ`, `GR`, `GS`, `GT`, `GU`, `GW`, `GY`, `HK`, `HM`, `HN`, `HR`, `HT`, `HU`, `IC`, `ID`, `IE`, `IL`, `IM`, `IN`, `IO`, `IQ`, `IR`, `IS`, `IT`, `JE`, `JM`, `JO`, `JP`, `KE`, `KG`, `KH`, `KI`, `KM`, `KN`, `KP`, `KR`, `KW`, `KY`, `KZ`, `LA`, `LB`, `LC`, `LI`, `LK`, `LR`, `LS`, `LT`, `LU`, `LV`, `LY`, `MA`, `MC`, `MD`, `ME`, `MF`, `MG`, `MH`, `MK`, `ML`, `MM`, `MN`, `MO`, `MP`, `MQ`, `MR`, `MS`, `MT`, `MU`, `MV`, `MW`, `MX`, `MY`, `MZ`, `NA`, `NC`, `NE`, `NF`, `NG`, `NI`, `NL`, `NO`, `NP`, `NR`, `NT`, `NU`, `NZ`, `OM`, `PA`, `PE`, `PF`, `PG`, `PH`, `PK`, `PL`, `PM`, `PN`, `PR`, `PS`, `PT`, `PW`, `PY`, `QA`, `RE`, `RO`, `RS`, `RU`, `RW`, `SA`, `SB`, `SC`, `SD`, `SE`, `SF`, `SG`, `SH`, `SI`, `SJ`, `SK`, `SL`, `SM`, `SN`, `SO`, `SR`, `SS`, `ST`, `SU`, `SV`, `SX`, `SY`, `SZ`, `TA`, `TC`, `TD`, `TF`, `TG`, `TH`, `TJ`, `TK`, `TL`, `TM`, `TN`, `TO`, `TP`, `TR`, `TT`, `TV`, `TW`, `TZ`, `UA`, `UG`, `UK`, `UM`, `US`, `UY`, `UZ`, `VA`, `VC`, `VE`, `VG`, `VI`, `VN`, `VU`, `WF`, `WS`, `XI`, `XU`, `XK`, `YE`, `YT`, `YU`, `ZA`, `ZM`, `ZR`, `ZW`]",defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(l.Z,{collapsible:!1,name:"postalCode",required:!1,deprecated:void 0,schemaDescription:"A postal code, also known as postcode, PIN or ZIP Code",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(l.Z,{collapsible:!1,name:"city",required:!1,deprecated:void 0,schemaDescription:"The city of the address (Synonym: Town, village, municipality)",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(l.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,s.kt)("details",{style:{}},(0,s.kt)("summary",{style:{}},(0,s.kt)("strong",null,"street"),(0,s.kt)("span",{style:{opacity:"0.6"}}," object")),(0,s.kt)("div",{style:{marginLeft:"1rem"}},(0,s.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,s.kt)("p",null,"A public road in a city, town, or village, typically with houses and buildings on one or both sides.")),(0,s.kt)(l.Z,{collapsible:!1,name:"name",required:!1,deprecated:void 0,schemaDescription:"Describes the official Name of the Street.",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(l.Z,{collapsible:!1,name:"houseNumber",required:!1,deprecated:void 0,schemaDescription:"Describes the House Number",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(l.Z,{collapsible:!1,name:"milestone",required:!1,deprecated:void 0,schemaDescription:"The Milestone is relevant for long roads without specific house numbers.",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(l.Z,{collapsible:!1,name:"direction",required:!1,deprecated:void 0,schemaDescription:"Describes the direction",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"})))),(0,s.kt)(l.Z,{collapsible:!1,name:"administrativeAreaLevel1",required:!1,deprecated:void 0,schemaDescription:"Identifying code of the Region within the country (e.g. Bayern)",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(l.Z,{collapsible:!1,name:"administrativeAreaLevel2",required:!1,deprecated:void 0,schemaDescription:"Further possibility to describe the region/address(e.g. County/Landkreis)",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(l.Z,{collapsible:!1,name:"administrativeAreaLevel3",required:!1,deprecated:void 0,schemaDescription:"Further possibility to describe the region/address(e.g. Township/Gemeinde)",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(l.Z,{collapsible:!1,name:"district",required:!1,deprecated:void 0,schemaDescription:"Divides the city in several smaller areas",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(l.Z,{collapsible:!1,name:"companyPostalCode",required:!1,deprecated:void 0,schemaDescription:"A separate postal code for a company, also known as postcode, PIN or ZIP Code",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(l.Z,{collapsible:!1,name:"industrialZone",required:!1,deprecated:void 0,schemaDescription:"The practice of designating an area for industrial development",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(l.Z,{collapsible:!1,name:"building",required:!1,deprecated:void 0,schemaDescription:"Describes a specific building within the address",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(l.Z,{collapsible:!1,name:"floor",required:!1,deprecated:void 0,schemaDescription:"Describes the floor/level the delivery shall take place",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(l.Z,{collapsible:!1,name:"door",required:!1,deprecated:void 0,schemaDescription:"Describes the  door/room/suite on the respective floor the delivery shall take place",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"})))),(0,s.kt)(l.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,s.kt)("details",{style:{}},(0,s.kt)("summary",{style:{}},(0,s.kt)("strong",null,"alternativePostalAddress"),(0,s.kt)("span",{style:{opacity:"0.6"}}," object")),(0,s.kt)("div",{style:{marginLeft:"1rem"}},(0,s.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,s.kt)("p",null,"Alternative Postal Address Part")),(0,s.kt)(l.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,s.kt)("details",{style:{}},(0,s.kt)("summary",{style:{}},(0,s.kt)("strong",null,"geographicCoordinates"),(0,s.kt)("span",{style:{opacity:"0.6"}}," object")),(0,s.kt)("div",{style:{marginLeft:"1rem"}},(0,s.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,s.kt)("p",null,"Geo coordinates record for an address")),(0,s.kt)(l.Z,{collapsible:!1,name:"longitude",required:!1,deprecated:void 0,schemaDescription:"Longitude coordinate",schemaName:"float",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(l.Z,{collapsible:!1,name:"latitude",required:!1,deprecated:void 0,schemaDescription:"Latitude coordinate",schemaName:"float",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(l.Z,{collapsible:!1,name:"altitude",required:!1,deprecated:void 0,schemaDescription:"Altitude, if applicable",schemaName:"float",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"})))),(0,s.kt)(l.Z,{collapsible:!1,name:"country",required:!1,deprecated:void 0,schemaDescription:"Describes the country",schemaName:"string",qualifierMessage:"**Possible values:** [`UNDEFINED`, `AC`, `AD`, `AE`, `AF`, `AG`, `AI`, `AL`, `AM`, `AN`, `AO`, `AQ`, `AR`, `AS`, `AT`, `AU`, `AW`, `AX`, `AZ`, `BA`, `BB`, `BD`, `BE`, `BF`, `BG`, `BH`, `BI`, `BJ`, `BL`, `BM`, `BN`, `BO`, `BQ`, `BR`, `BS`, `BT`, `BU`, `BV`, `BW`, `BY`, `BZ`, `CA`, `CC`, `CD`, `CF`, `CG`, `CH`, `CI`, `CK`, `CL`, `CM`, `CN`, `CO`, `CP`, `CR`, `CS`, `CU`, `CV`, `CW`, `CX`, `CY`, `CZ`, `DE`, `DG`, `DJ`, `DK`, `DM`, `DO`, `DZ`, `EA`, `EC`, `EE`, `EG`, `EH`, `ER`, `ES`, `ET`, `EU`, `EZ`, `FI`, `FJ`, `FK`, `FM`, `FO`, `FR`, `FX`, `GA`, `GB`, `GD`, `GE`, `GF`, `GG`, `GH`, `GI`, `GL`, `GM`, `GN`, `GP`, `GQ`, `GR`, `GS`, `GT`, `GU`, `GW`, `GY`, `HK`, `HM`, `HN`, `HR`, `HT`, `HU`, `IC`, `ID`, `IE`, `IL`, `IM`, `IN`, `IO`, `IQ`, `IR`, `IS`, `IT`, `JE`, `JM`, `JO`, `JP`, `KE`, `KG`, `KH`, `KI`, `KM`, `KN`, `KP`, `KR`, `KW`, `KY`, `KZ`, `LA`, `LB`, `LC`, `LI`, `LK`, `LR`, `LS`, `LT`, `LU`, `LV`, `LY`, `MA`, `MC`, `MD`, `ME`, `MF`, `MG`, `MH`, `MK`, `ML`, `MM`, `MN`, `MO`, `MP`, `MQ`, `MR`, `MS`, `MT`, `MU`, `MV`, `MW`, `MX`, `MY`, `MZ`, `NA`, `NC`, `NE`, `NF`, `NG`, `NI`, `NL`, `NO`, `NP`, `NR`, `NT`, `NU`, `NZ`, `OM`, `PA`, `PE`, `PF`, `PG`, `PH`, `PK`, `PL`, `PM`, `PN`, `PR`, `PS`, `PT`, `PW`, `PY`, `QA`, `RE`, `RO`, `RS`, `RU`, `RW`, `SA`, `SB`, `SC`, `SD`, `SE`, `SF`, `SG`, `SH`, `SI`, `SJ`, `SK`, `SL`, `SM`, `SN`, `SO`, `SR`, `SS`, `ST`, `SU`, `SV`, `SX`, `SY`, `SZ`, `TA`, `TC`, `TD`, `TF`, `TG`, `TH`, `TJ`, `TK`, `TL`, `TM`, `TN`, `TO`, `TP`, `TR`, `TT`, `TV`, `TW`, `TZ`, `UA`, `UG`, `UK`, `UM`, `US`, `UY`, `UZ`, `VA`, `VC`, `VE`, `VG`, `VI`, `VN`, `VU`, `WF`, `WS`, `XI`, `XU`, `XK`, `YE`, `YT`, `YU`, `ZA`, `ZM`, `ZR`, `ZW`]",defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(l.Z,{collapsible:!1,name:"postalCode",required:!1,deprecated:void 0,schemaDescription:"A postal code, also known as postcode, PIN or ZIP Code",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(l.Z,{collapsible:!1,name:"city",required:!1,deprecated:void 0,schemaDescription:"The city of the address (Synonym: Town, village, municipality)",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(l.Z,{collapsible:!1,name:"administrativeAreaLevel1",required:!1,deprecated:void 0,schemaDescription:"Identifying code of the Region within the country (e.g. Bayern)",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(l.Z,{collapsible:!1,name:"deliveryServiceNumber",required:!1,deprecated:void 0,schemaDescription:"Describes the PO Box or private Bag number the delivery should be placed at.",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(l.Z,{collapsible:!1,name:"deliveryServiceType",required:!1,deprecated:void 0,schemaDescription:"The type of this specified delivery",schemaName:"string",qualifierMessage:"**Possible values:** [`PO_BOX`, `PRIVATE_BAG`, `BOITE_POSTALE`]",defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(l.Z,{collapsible:!1,name:"deliveryServiceQualifier",required:!1,deprecated:void 0,schemaDescription:"Delivery Service Qualifier",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"})))),(0,s.kt)(l.Z,{collapsible:!1,name:"bpnLegalEntity",required:!1,deprecated:void 0,schemaDescription:"BPN of the related legal entity, if available",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(l.Z,{collapsible:!1,name:"bpnSite",required:!1,deprecated:void 0,schemaDescription:"BPN of the related site, if available",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(l.Z,{collapsible:!1,name:"createdAt",required:!1,deprecated:void 0,schemaDescription:"The timestamp the business partner data was created",schemaName:"date-time",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(l.Z,{collapsible:!1,name:"updatedAt",required:!1,deprecated:void 0,schemaDescription:"The timestamp the business partner data was last updated",schemaName:"date-time",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(l.Z,{collapsible:!1,name:"isLegalAddress",required:!1,deprecated:void 0,schemaDescription:"Flag if this is the legal address of its related legal entity",schemaName:"boolean",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(l.Z,{collapsible:!1,name:"isMainAddress",required:!1,deprecated:void 0,schemaDescription:"Flag if this is the main address of its related site",schemaName:"boolean",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"})))))))))),(0,s.kt)(p.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,s.kt)(d.Z,{responseExample:'{\n  "totalElements": 0,\n  "totalPages": 0,\n  "page": 0,\n  "contentSize": 0,\n  "content": [\n    {\n      "score": 0,\n      "address": {\n        "bpna": "string",\n        "name": "string",\n        "states": [\n          {\n            "description": "string",\n            "validFrom": "2023-06-26",\n            "validTo": "2023-06-26",\n            "type": {\n              "technicalKey": "ACTIVE",\n              "name": "string"\n            }\n          }\n        ],\n        "identifiers": [\n          {\n            "value": "string",\n            "type": {\n              "technicalKey": "string",\n              "name": "string"\n            }\n          }\n        ],\n        "physicalPostalAddress": {\n          "geographicCoordinates": {\n            "longitude": 0,\n            "latitude": 0,\n            "altitude": 0\n          },\n          "country": "UNDEFINED",\n          "postalCode": "string",\n          "city": "string",\n          "street": {\n            "name": "string",\n            "houseNumber": "string",\n            "milestone": "string",\n            "direction": "string"\n          },\n          "administrativeAreaLevel1": "string",\n          "administrativeAreaLevel2": "string",\n          "administrativeAreaLevel3": "string",\n          "district": "string",\n          "companyPostalCode": "string",\n          "industrialZone": "string",\n          "building": "string",\n          "floor": "string",\n          "door": "string"\n        },\n        "alternativePostalAddress": {\n          "geographicCoordinates": {\n            "longitude": 0,\n            "latitude": 0,\n            "altitude": 0\n          },\n          "country": "UNDEFINED",\n          "postalCode": "string",\n          "city": "string",\n          "administrativeAreaLevel1": "string",\n          "deliveryServiceNumber": "string",\n          "deliveryServiceType": "PO_BOX",\n          "deliveryServiceQualifier": "string"\n        },\n        "bpnLegalEntity": "string",\n        "bpnSite": "string",\n        "createdAt": "2023-06-26",\n        "updatedAt": "2023-06-26",\n        "isLegalAddress": true,\n        "isMainAddress": true\n      }\n    }\n  ]\n}',language:"json",mdxType:"ResponseSamples"}))))))),(0,s.kt)(p.Z,{label:"400",value:"400",mdxType:"TabItem"},(0,s.kt)("div",null,(0,s.kt)("p",null,"On malformed search or pagination request")),(0,s.kt)("div",null)))))}v.isMDXComponent=!0}}]);