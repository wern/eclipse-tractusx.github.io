"use strict";(self.webpackChunkeclipse_tractusx_github_io=self.webpackChunkeclipse_tractusx_github_io||[]).push([[30352],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>k});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),c=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=c(a),d=r,k=u["".concat(s,".").concat(d)]||u[d]||h[d]||l;return a?n.createElement(k,i(i({ref:t},p),{},{components:a})):n.createElement(k,i({ref:t},p))}));function k(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[u]="string"==typeof e?e:r,i[1]=o;for(var c=2;c<l;c++)i[c]=a[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},26742:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>c});var n=a(87462),r=(a(67294),a(3905));const l={},i="HashiCorp Vault Extension",o={unversionedId:"kits/tractusx-edc/edc-extensions/hashicorp-vault/README",id:"version-3.1.0/kits/tractusx-edc/edc-extensions/hashicorp-vault/README",title:"HashiCorp Vault Extension",description:"Used Components",source:"@site/docs-kits_versioned_docs/version-3.1.0/kits/tractusx-edc/edc-extensions/hashicorp-vault/README.md",sourceDirName:"kits/tractusx-edc/edc-extensions/hashicorp-vault",slug:"/kits/tractusx-edc/edc-extensions/hashicorp-vault/",permalink:"/docs-kits/3.1.0/kits/tractusx-edc/edc-extensions/hashicorp-vault/",draft:!1,tags:[],version:"3.1.0",frontMatter:{},sidebar:"kits",previous:{title:"Data Plane Selector Configuration Extension",permalink:"/docs-kits/3.1.0/kits/tractusx-edc/edc-extensions/dataplane-selector-configuration/"},next:{title:"Observability API customization",permalink:"/docs-kits/3.1.0/kits/tractusx-edc/edc-extensions/observability-api-customization/"}},s={},c=[{value:"Used Components",id:"used-components",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Health Check",id:"health-check",level:2},{value:"Health Checks in Catena-X",id:"health-checks-in-catena-x",level:3},{value:"Example: Create &amp; Configure DAPS Key",id:"example-create--configure-daps-key",level:2},{value:"Insert DAPS Key into HashiCorp Vault",id:"insert-daps-key-into-hashicorp-vault",level:3},{value:"Configure Key in the EDC",id:"configure-key-in-the-edc",level:3},{value:"Example: Catena-X Argo CD Vault Configuration",id:"example-catena-x-argo-cd-vault-configuration",level:2}],p={toc:c};function u(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"hashicorp-vault-extension"},"HashiCorp Vault Extension"),(0,r.kt)("h2",{id:"used-components"},"Used Components"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.vaultproject.io/"},"Hashicorp Vault"))),(0,r.kt)("hr",null),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Please note:"),"\nUsing the HashiCorp vault it is possible to define multiple data entries per secret. Other vaults might allow only one\nentry per secret (e.g. Azure Key Vault)."),(0,r.kt)("p",null,"Therefore, the HashiCorp vault extension ",(0,r.kt)("strong",{parentName:"p"},"only")," checks the '",(0,r.kt)("strong",{parentName:"p"},"content"),"' data entry! Please use this knowledge when\ncreating secrets the EDC should consume."),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"configuration"},"Configuration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Key"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Mandatory"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"edc.vault.hashicorp.url"),(0,r.kt)("td",{parentName:"tr",align:"left"},"URL to connect to the HashiCorp Vault"),(0,r.kt)("td",{parentName:"tr",align:null},"X"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"edc.vault.hashicorp.token"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Value for ",(0,r.kt)("a",{parentName:"td",href:"https://www.vaultproject.io/docs/auth/token"},"Token Authentication")," with the vault"),(0,r.kt)("td",{parentName:"tr",align:null},"X"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"edc.vault.hashicorp.timeout.seconds"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Request timeout in seconds when contacting the vault"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"30"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"edc.vault.hashicorp.health.check.enabled"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Enable health checks to ensure vault is initialized, unsealed and active"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"true"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"edc.vault.hashicorp.health.check.standby.ok"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Specifies if a vault in standby is healthy. This is useful when Vault is behind a non-configurable load balancer"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"false"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"edc.vault.hashicorp.api.secret.path"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Path to the ",(0,r.kt)("a",{parentName:"td",href:"https://www.vaultproject.io/api-docs/secret/kv/kv-v1"},"secret api")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"/v1/secret"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"edc.vault.hashicorp.api.health.check.path"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Path to the ",(0,r.kt)("a",{parentName:"td",href:"https://www.vaultproject.io/api-docs/system/health"},"health api")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"/v1/sys/health"))))),(0,r.kt)("h2",{id:"health-check"},"Health Check"),(0,r.kt)("p",null,"The HashiCorp Vault Extension is able to run health checks. A health check is successful when the vault is ",(0,r.kt)("em",{parentName:"p"},"initialized"),", ",(0,r.kt)("em",{parentName:"p"},"active")," and ",(0,r.kt)("em",{parentName:"p"},"unsealed"),". Successful health checks are logged with level ",(0,r.kt)("em",{parentName:"p"},"FINE"),". Unsuccessful health checks will be logged\nwith level ",(0,r.kt)("em",{parentName:"p"},"WARNING"),"."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"health-checks-in-catena-x"},"Health Checks in Catena-X"),(0,r.kt)("p",null,"If your project uses the Catena-X HashiCorp Vault please set ",(0,r.kt)("inlineCode",{parentName:"p"},"edc.vault.hashicorp.health.check.standby.ok")," to ",(0,r.kt)("em",{parentName:"p"},"true"),". Otherwise the health check would fail if the Vault is in standby."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-plain"},"# Logs of successful check with standby vault\n[2022-08-01 14:48:37] [FINE   ] HashiCorp Vault HealthCheck successful. HashicorpVaultHealthResponsePayload(isInitialized=true, isSealed=false, isStandby=true, isPerformanceStandby=false, replicationPerformanceMode=disabled,replicationDrMode=disabled, serverTimeUtc=1659365317, version=1.9.2, clusterName=vault-cluster-4b193c26, clusterId=83fabd45-685d-7f8d-9495-18fab6f50d5e)\n")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"example-create--configure-daps-key"},"Example: Create & Configure DAPS Key"),(0,r.kt)("h3",{id:"insert-daps-key-into-hashicorp-vault"},"Insert DAPS Key into HashiCorp Vault"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cat << EOF | /bin/vault kv put secret/my-daps-key content=-\n        -----BEGIN PRIVATE KEY-----\n        MIIEvwIBADANBgkqhkiG9w0BAQEFAASCBKkwggSlAgEAAoIBAQCv+NUvK7ppJPiM\n        wZPaQQxE745T5pV38O/Mkay5m82nnd5BoMoCdhhRTy3Efy79FhvBfGruFBLLGzsQ\n        FOEUY53Albeumo2gmpZSKjJR/M2ifK4MTaRniVOWL5mEcZSKPhsItKpxdLaiYfB6\n        8uzqkqNICtmAQRSclYKzLBM9xHLEtxDWCbnzYFCHoOELGi+PTNIFsUnsT3QuKaJ/\n        ejb47vdA/EZbwCQdtTyJ6i54jGhZUp0WMwq1Go2uhzJsygPmT2da/ZZZc7BNNEQE\n        sUSMZSpMH807TG/TunstotrzO4ShhpV4zbJ2FV/VlxH7yuCawmnR84F/KnXs9fUc\n        RSrQfuYBAgMBAAECggEAO+KjsjTgcG3bhBNQnMLsSP15Y0Yicbn18ZlVvaivGS7Z\n        d14fwSytY+ZdPfTGaey/L16HCVSdfK9cr0Fbw9OO2P5ajzobnp9dLsMbctlkpbpm\n        hNtbarzKTF8QkIkSsuUl0BWjt46vpJ1N+Jl5VO7oUFkY4dPEDvG2lAEY3zlekWDm\n        cQeOC/YgpoW4xfRwPPS6QE0w3Q+H5NfNjfz+mSHeItTlVfTKDRliWQLPWeRZFuXh\n        FlRFUQnTmEE/9wpIe3Hn7WXJ3fQqcYDzxU7/zwwY9I7bB15SgVHlR0ENDPAD5X8F\n        MVZ3EcLlqGBy+WvTWALp6pc8YfhW3fiTWyuamXtNrQKBgQDonsIzBKEOOKdKGW0e\n        uyw79ErmnmzkY5nuMrMxrmTA4WKCfJ/YRRA+4sxiltWsIJ3UkHe3OBCSSCdj79hb\n        ugb/+UzE70hOdgrct2NUQqbrj3gvsVvU8ZRQgTRMqKpmC0zY7KOMx6NU85z3IvS1\n        z5fjszcUv4kLQlldYGSAuqPy+wKBgQDBqIkc8p/wcw7ygo1q/GerNeszfoxiIFp8\n        h4RWLVhkwrcXFz30wBlUWuv5/kxU8tmJcmXxe72EmUstd6wvNOAnYwCiile6zQiJ\n        vsr1axavZnGOtNGUp6DUAsd2iviBl7IZ7kAcqCrQo4ivGhfHmahH3hmg8wuAMjYB\n        8f+FSPgaMwKBgQC7W4tMrjDOFIFhJEOIWfcRvvxI7VcFSNelS76aiDzsQVwnfxr7\n        hPzFucQmsBgfUBHvMADMWGK4f1cCnh5kGtwidXgIsjVJxLeQ+EAPkLOCzQZfW3l8\n        dKshgD9QcxTzpaxal5ZPAEikVqaZQtVYToCmzCTUGETYBbOWitnH+Qut2wKBgQC6\n        Y6DcSLUhc0xOotLDxv1sbu/aVxF8nFEbDD+Vxf0Otc4MnmUWPRHj+8KlkVkcZcR0\n        IrP1kThd+EDAGS+TG9wmbIY+6tH3S8HM+eJUBWcHGJ1xUZ1p61DC3Y3nDWiTKlLT\n        3Fi+fCkBOHSku4Npq/2odh7Kp0JJd4o9oxJg0VNhuwKBgQDSFn7dqFE0Xmwc40Vr\n        0wJH8cPWXKGt7KJENpj894buk2DniLD4w2x874dzTjrOFi6fKxEzbBNA9Rq9UPo8\n        u9gKvl/IyWmV0c4zFCNMjRwVdnkMEte/lXcJZ67T4FXZByqAZlhrr/v0FD442Z9B\n        AjWFbUiBCFOo+gpAFcQGrkOQHA==\n        -----END PRIVATE KEY-----\n        EOF\n")),(0,r.kt)("h3",{id:"configure-key-in-the-edc"},"Configure Key in the EDC"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"EDC_OAUTH_PRIVATE_KEY_ALIAS: my-daps-key\n")),(0,r.kt)("p",null,"or"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"edc.oauth.private.key.alias=my-daps-key\n")),(0,r.kt)("h2",{id:"example-catena-x-argo-cd-vault-configuration"},"Example: Catena-X Argo CD Vault Configuration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-properties"},"#########\n# Vault #\n#########\n\nedc.vault.hashicorp.url=https://vault.demo.catena-x.net\n# or even better configure token as k8 secret\nedc.vault.hashicorp.token=<token>\nedc.vault.hashicorp.api.secret.path=/v1/<tenant>/\nedc.vault.hashicorp.health.check.standby.ok=true\n\n########################\n# E.g. OAuth Extension #\n########################\n\n# from UI: secret stored in https://vault.demo.catena-x.net/ui/vault/secrets/<tenant>/show/my-daps-key\nedc.oauth.private.key.alias=my-daps-key\n")))}u.isMDXComponent=!0}}]);